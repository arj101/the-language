#V2
a += 9
let a = 230
a = 40
a += 50
a
a += 500
let a = 40
a -= 30
let a = 20
a -= 40
a += 40
let a = 409
a += 3490
a
a -= 300
a
a -= 599
a
a -= 4999
a
a -= 48*4
let a = 34
a /= 49
a
a /= 49
a
a *= 39848778
ls
a
let a = 49
a *= 7
a
print a
let a = 59
a -= 49
a ++
a++
a/=49
ls
a
lvar
poweroff
let a = 40
a /= a+ 54
a /= 4+ 54
a /= 4 + 54
a /= (4 + 54)
a +4
ls
a
a = 3
let a = 40
while true { print a}
let  a = 30
while true { print a}
let a = 40
let a = 30
while true { print a}
let a = 30
while true { print a}
let a = 40
while true { print a}
let a = 40
while true { print a}
let a = 20
while true { print a}
for let i = 0; i <2; i+=1 { print i}
d
let a = 20
let a = 49
a
f
sf
for let i = 0; i <2; i+=1 { print i}
let a = 20
a
let a = 
print !a
print !false
print !true
true + true
true *4
(true + true) ** 10
let a = 10
a
let a = 10;
a
let a = 20;
a
print a**a
pint a/a/a
print a/a/a
pint a**a/a
print a**a/a
let a = 20
print a
let a = 20;
print a
while (true) print a;
while true { print 'a' }
while (true) print a;print '69 ' + ['69']
'REPL HISTORY'
'REPL HISTORY'
print '69 ' + ['69']
#V2
//v2
/*e
/*e*/
/*e*/'A' 
'/*ea*/'
"now I have this" / 3
"and " * 2 + " this "
"now I have this" / 3
"and " * 2 + "  this"









"a" * 2
"a" * 2 + 'a'
"a" * 2 + "a"
"and " * 2 + "this"
"now I have this" / 2
"(and " + "(not so)" + "random" + " \"deadlocks\""
"now I have this" / 2
print ("and " * 2 + "this")
"and " * 2 + "this"


"and" * 2 + " this"
"now I have this" / 2
"and " * 2 + "this"
"and " * 2 + "this"
"and " * 2 + "this"
"and " * 2 + "this"
"and " * 2 + "this"
"and " * 2 + "this"
"and " * 2 + "this"
"and " * 2 + "this"
"and " * 2 + "this"
"and " * 2 + "this"
fun fib(a) { if a <= 1 { return a }; return fib(a - 1) + fib(a-2) }
fib(2)
fib()5
fib()5
fib(5)
fib(6)
fib(20)
fun fib(a) { if a <= 1 { return a }; return fib(a - 1) + fib(a-2) }
fib(20)
fib(2)5
fib(20)
fib(20)
fib(25)
fib()30)
fun fib(a) { if a <= 1 { return a }; return fib(a - 1) + fib(a-2) }
fib(20)
fib()50
fib(50)
let a
print a
let a, b






print ctrl+c
c * c + c == c
c == c
c  + c == c
c + c
let a = 10
a
print a * 2
fun fib(a) { if a <= 1 { return a }; return fib(a - 1) + fib(a-2) }
fib('20')
fib(25)
fib(30)
fun fib(a) { if a <= 1 { return 1 }; return fib(a - 1) + fib(a-2) }
fib(30)
fib(20)
fib(20)
fib(21)
fib(22)
fib(23)
fib(2)4)
fib(24)
fib(25)
fib(26)
fib(27)
fib(28)
fib(29)
fib(30)
let a = fib
a
fun fib(a) { if a <= 1 { return 1 }; return fib(a - 1) + fib(a-2) }
let fib2 = fib
print fib
fib
fib + "20"
fun lol() { print 'lol' }
let lmao = lol
print lmao + lol
lmao() + ' ' + lol()
fun lol() { print 'lol' }
lmao() + ' ' + lol()
fun lol() { print 'lol' }
print lmao + lol
fun lol() { print 'lol' }
let lmao = lol
fun lol() { print 'lol' }
lol()
+++
fun lol() { print 'lol' }
lol()


lel
fun fib(a) { if a <= 1 { return 1 }; return fib(a - 1) + fib(a-2) }
fun fib(a) { if a <= 1 { return 1 }; return fib(a - 1) + fib(a-2) }
fib(1)
fib()2
fib(20)
fib()30)
fib(30)
let a = 20;
fun fooBar() { if a % 3 { return 'foo' } else { return 'bar' }}
fooBar()
fooBar()
fun fooBar() {a+=1; if a % 3 { return 'foo' } else { return 'bar' }}
fooBar()
fooBar()
fooBar()
fooBar()
fooBar()
c
fun fooBar(a) {a+=1; if a % 3 { return 'foo' } else { return 'bar' }}
let a = 1
fooBar(a)
fooBar(a)
fooBar(a)

cd
fun fooBar(a) {a+=1; if a % 3 { return 'foo' } else { return 'bar' }}
cd
c
fun fooBar(a) {a+=1; if a % 3 { return 'foo' } else { return 'bar' }}
let a = 1
fooBar(1)
fooBar(22)
fooBar()3
fooBar(3)
fooBar(3)
fun fooBar(a) {a+=1; if a % 3 == 0 { return 'foo' } else { return 'bar' }}
fooBar(3)
fooBar()4
fooBar(4)
fun fooBar(a) {a+=1; if a % 3 == 0 { return 'foo' } return 'bar'}
fun fooBar(a) {a+=1; if a % 3 == 0 { return 'foo' }; return 'bar';}
f
fooBar(4)
fooBar()3
fun fooBar(a) {a+=1; if a % 3 == 0 { return 'foo' }; return 'bar';}
fooBar(3)
3 % 3
print 'e'
fun e(a) { print a + 'e' }
e('a')
e('dsjkfkjf')
e('2')
e([2])
fun e(a) { print a + ' e' }
e([2])
e([2, 3])
e([2, 3, 'a', ''])
e([2, 3, 'a', ''a
fun fib(a) { if a <= 1 { return 1 }; return fib(a - 1) + fib(a-2) }
fib(2)
print 'hi'
print eeeeeeeeeeeeeeeeeeee