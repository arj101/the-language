program        → declaration* EOF ;

declaration    → letDecl
               | statement ;

letDcl         → "let" INDETIFIER ( "=" expression)? ";" ;

statement      → exprStmt
               | printStmt
               | block 
               | ifStmt ;

block          → "{" declaration* "}" ;

exprStmt       → expression (";" | "\n") ;
printStmt      → "print" exprStmt ;

expression     → literal
               | unary
               | binary
               | grouping ;

literal        → NUMBER | STRING | "true" | "false" | "null" ;
grouping       → "(" expression ")" ;
unary          → ( "-" | "!" ) expression ;
binary         → expression operator expression ;
operator       → "==" | "!=" | "<" | "<=" | ">" | ">="
               | "+"  | "-"  | "*" | "/" 
               | "="
               | IDENTIFIER ; 
